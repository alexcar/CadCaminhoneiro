// <auto-generated />
using System;
using JSL.CadCaminhoneiro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JSL.CadCaminhoneiro.Data.Migrations
{
    [DbContext(typeof(CadCaminhoneiroContext))]
    partial class CadCaminhoneiroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Caminhao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<byte>("Eixo")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("MarcaCaminhaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModeloCaminhaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaCaminhaoId");

                    b.HasIndex("ModeloCaminhaoId");

                    b.HasIndex("MotoristaId")
                        .IsUnique();

                    b.ToTable("Caminhao");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("char(8)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Habilitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPrimeiraHabilitacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroRegistro")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId")
                        .IsUnique();

                    b.ToTable("Habilitacao");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.MarcaCaminhao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MarcaCaminhao");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.ModeloCaminhao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("MarcaCaminhaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MarcaCaminhaoId");

                    b.ToTable("ModeloCaminhao");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Motorista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("char(11)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataExpedicaoRegistroGeral")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasColumnType("varchar(19)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeMae")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomePai")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroRegistroGeral")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("OrgaoExpedicaoRegistroGeral")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Caminhao", b =>
                {
                    b.HasOne("JSL.CadCaminhoneiro.Domain.Entities.MarcaCaminhao", "MarcaCaminhao")
                        .WithMany()
                        .HasForeignKey("MarcaCaminhaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JSL.CadCaminhoneiro.Domain.Entities.ModeloCaminhao", "ModeloCaminhao")
                        .WithMany()
                        .HasForeignKey("ModeloCaminhaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JSL.CadCaminhoneiro.Domain.Entities.Motorista", "Motorista")
                        .WithOne("Caminhao")
                        .HasForeignKey("JSL.CadCaminhoneiro.Domain.Entities.Caminhao", "MotoristaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MarcaCaminhao");

                    b.Navigation("ModeloCaminhao");

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("JSL.CadCaminhoneiro.Domain.Entities.Motorista", "Motorista")
                        .WithOne("Endereco")
                        .HasForeignKey("JSL.CadCaminhoneiro.Domain.Entities.Endereco", "MotoristaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Habilitacao", b =>
                {
                    b.HasOne("JSL.CadCaminhoneiro.Domain.Entities.Motorista", "Motorista")
                        .WithOne("Habilitacao")
                        .HasForeignKey("JSL.CadCaminhoneiro.Domain.Entities.Habilitacao", "MotoristaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.ModeloCaminhao", b =>
                {
                    b.HasOne("JSL.CadCaminhoneiro.Domain.Entities.MarcaCaminhao", "MarcaCaminhao")
                        .WithMany("ModelosCaminhao")
                        .HasForeignKey("MarcaCaminhaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MarcaCaminhao");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.MarcaCaminhao", b =>
                {
                    b.Navigation("ModelosCaminhao");
                });

            modelBuilder.Entity("JSL.CadCaminhoneiro.Domain.Entities.Motorista", b =>
                {
                    b.Navigation("Caminhao");

                    b.Navigation("Endereco");

                    b.Navigation("Habilitacao");
                });
#pragma warning restore 612, 618
        }
    }
}
